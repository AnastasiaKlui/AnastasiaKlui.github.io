<?php
if ($_SERVER["REQUEST_METHOD"] === "POST") {
    $text = $_POST["text"] ?? '';
    $password = $_POST["password"] ?? '';
    $n = $_POST["n"] ?? 20;
    $word = $_POST["word"] ?? '';
    $key = $_POST["key"] ?? 3;

    // –ó–∞–º–µ–Ω–∞ –¥–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥-–º–º-–≥–≥–≥–≥ –Ω–∞ –≥–≥–≥–≥.–º–º.–¥–¥
    $text = preg_replace('/(\d{2})-(\d{2})-(\d{4})/', '$3.$2.$1', $text);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    $password_message = (strlen(trim($password)) > 5 && strlen($password) < 10)
        ? "–ü–∞—Ä–æ–ª—å –ø—ñ–¥—Ö–æ–¥–∏—Ç—å"
        : "–ü–∞—Ä–æ–ª—å –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å";

    // –ó–∞–º–µ–Ω–∞ —Å–º–∞–π–ª–∏–∫–æ–≤ –Ω–∞ —ç–º–æ–¥–∑–∏
    $smiles = ['(smiley)', '(teeth)', '(sad)', '(yummi)', '(wink)'];
    $emojis = ['üòä', 'üòÅ', '‚òπÔ∏è', 'üòú', 'üòâ'];
    $text = str_replace($smiles, $emojis, $text);

    // –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è
    $translit_map = [
        '–∞' => 'a', '–±' => 'b', '–≤' => 'v', '–≥' => 'h',
        '–¥' => 'd', '–µ' => 'e', '—î' => 'ye', '–∂' => 'zh',
        '–∑' => 'z', '–∏' => 'y', '—ñ' => 'i', '—ó' => 'yi',
        '–π' => 'y', '–∫' => 'k', '–ª' => 'l', '–º' => 'm',
        '–Ω' => 'n', '–æ' => 'o', '–ø' => 'p', '—Ä' => 'r',
        '—Å' => 's', '—Ç' => 't', '—É' => 'u', '—Ñ' => 'f',
        '—Ö' => 'kh', '—Ü' => 'ts', '—á' => 'ch', '—à' => 'sh',
        '—â' => 'shch', '—é' => 'yu', '—è' => 'ya'
    ];
    $translit_text = strtr($text, $translit_map);

    // –û–±—Ä–µ–∑–∞–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    $truncated_text = mb_strlen($text) > $n 
        ? mb_substr($text, 0, $n) . "..." 
        : $text;

    // –ü–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ $word)
    if (!empty($word)) {
        $word_count = substr_count($text, $word);
    } else {
        $word_count = 0; // –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π —Ä–∞–≤–Ω–æ 0
    }

    // –ó–∞–º–µ–Ω–∞ —á–∏—Å–µ–ª
    $numbers = [
        '1' => '–æ–¥–∏–Ω', '2' => '–¥–≤–∞', '3' => '—Ç—Ä–∏',
        '4' => '—á–æ—Ç–∏—Ä–∏', '5' => '–ø‚Äô—è—Ç—å', '6' => '—à—ñ—Å—Ç—å',
        '7' => '—Å—ñ–º', '8' => '–≤—ñ—Å—ñ–º', '9' => '–¥–µ–≤‚Äô—è—Ç—å', '0' => '–Ω—É–ª—å'
    ];
    $text = strtr($text, $numbers);

    // –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–º –¶–µ–∑–∞—Ä—è
    $encrypted_text = '';
    foreach (str_split($text) as $char) {
        if (ctype_alpha($char)) {
            $base = ctype_upper($char) ? 'A' : 'a';
            $encrypted_text .= chr((ord($char) - ord($base) + $key) % 26 + ord($base));
        } else {
            $encrypted_text .= $char;
        }
    }

    // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    echo "<h2>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏:</h2>";
    echo "<p><strong>–ü–∞—Ä–æ–ª—å:</strong> $password_message</p>";
    echo "<p><strong>–¢—Ä–∞–Ω—Å–ª—ñ—Ç–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç:</strong> $translit_text</p>";
    echo "<p><strong>–û–±—Ä—ñ–∑–∞–Ω–∏–π —Ç–µ–∫—Å—Ç:</strong> $truncated_text</p>";
    echo "<p><strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å —Å–ª–æ–≤–∞ '$word':</strong> $word_count</p>";
    echo "<p><strong>–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç:</strong> $encrypted_text</p>";
}
?>
